{"version":3,"sources":["components/Navigation.js","appconfig.js","helpers.js","components/lessons/ExerciseResetButton.js","components/lessons/ExerciseInput.js","components/lessons/ExerciseItem.js","components/lessons/Exercise.js","components/words/WordsNavItem.js","components/AppNav.js","components/lessons/ExerciseNav.js","components/words/WordsNav.js","components/words/WordsItem.js","components/words/Words.js","components/phrases/Phrases.js","components/phrases/PhrasesNav.js","components/Routes.js","components/App.js","index.js"],"names":["Navigation","nav","document","getElementById","className","classList","contains","react_default","a","createElement","id","NavLink","activeClassName","onClick","this","handleClickUri","to","handleClick","Component","prodUrl","devUrl","wordsVersion","phrasesVersion","exercisesVersion","wordsCompetitionVersion","getModuleVersion","module","AppConfig","concat","url","path","ExerciseResetButton","props","handler","ExerciseInput","type","data-id","input","data","value","localData","onChange","handleOnChange","ExerciseItem","visit","bg","lessons_ExerciseInput","handleClickAnswer","en","Exercise","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","getData","lessonId","arguments","length","undefined","uri","JSON","parse","localStorage","getItem","localKey","setState","axios","get","then","result","setLocalData","apiData","defineProperty","setItem","stringify","setLocalStorage","lesson","parseInt","match","params","state","getLocalStorage","localExercises","event","target","dataset","_this2","_this$state","resetButton","keys","lessons_ExerciseResetButton","map","entry","lessons_ExerciseItem","key","WordsNavItem","_this$props","content","answer","info","quantity","Link","AppNav","items","words_WordsNavItem","ExerciseNav","storageVersion","parseFloat","appVersion","exercisesNav","setExercisesNav","setVisited","lessons","filter","includes","visited","forEach","removeItem","addClassVisited","handleAnswer","item","indexOf","title","WordsNav","dataUrl","rowsCount","setWordsNav","rows","local","moduleUrl","bind","assertThisInitialized","elements","Math","ceil","i","push","WordsItem","trans","transcription","Words","itemsCount","words_WordsItem","param","Phrases","PhrasesNav","Routes","Switch","Route","exact","component","App","src_components_Navigation","components_Routes","ReactDOM","render","BrowserRouter","basename","process","src_components_App"],"mappings":"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","file":"static/js/main.5ac92487.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport './Navigation.css';\n\nclass Navigation extends Component {\n    \n    handleClick() {\n        let nav = document.getElementById(\"navBar\");\n        \n        if (nav.className === \"header\") {\n            nav.className += \" responsive\";\n        } else {\n            nav.className = \"header\";\n        }\n    }\n    \n    handleClickUri() {\n        let nav = document.getElementById(\"navBar\");\n        \n        if ( nav.classList.contains(\"responsive\") ) {\n            nav.className = \"header\";\n        }\n    }\n    \n    //~ <NavLink \n                    //~ activeClassName=\"active\" \n                    //~ onClick={this.handleClickUri} \n                    //~ to=\"/competition\">\n                    //~ Competition\n                //~ </NavLink>\n\n    render() {\n\n        return (\n            <div className=\"header\" id=\"navBar\">\n                <NavLink\n                    activeClassName=\"active\"\n                    onClick={this.handleClickUri}\n                    to=\"/lessons\">\n                    Lessons\n                </NavLink>\n                <NavLink \n                    activeClassName=\"active\" \n                    onClick={this.handleClickUri} \n                    to=\"/words\">\n                    Words\n                </NavLink>\n                <NavLink \n                    activeClassName=\"active\" \n                    onClick={this.handleClickUri} \n                    to=\"/phrases\">\n                    Phrases\n                </NavLink>\n                <button className=\"icon\" onClick={this.handleClick}>\n                    &equiv;\n                </button>\n            </div>\n        );\n    }\n}\nexport default Navigation;","export const prodUrl = 'https://engrexapi.herokuapp.com';\n\nexport const devUrl = 'http://www.engrexapi.com';\n\nexport const wordsVersion = 1.3;\n\nexport const phrasesVersion = 1.2;\n\nexport const exercisesVersion = 1.2;\n\nexport const wordsCompetitionVersion = 1.0;","import * as AppConfig from './appconfig';\n\nexport const getModuleVersion = (module) => {\n    \n    return AppConfig[`${module}Version`];\n};\n\nexport const url = (path) => {\n\n    if (process.env.NODE_ENV === 'production') {\n        return AppConfig.prodUrl + path;\n    }\n\n    return AppConfig.devUrl + path;\n};\n\nexport const makeClasses = classes => {\n\n    if (Array.isArray(classes)) {\n\n        return classes.join(' ');\n    }\n\n    return classes;\n};","import React from 'react';\n\nconst ExerciseResetButton = props => <button onClick={props.handler}>Reset Progress</button>;\nexport default ExerciseResetButton;","import React, { Component } from 'react';\n\n\nclass ExerciseInput extends Component {\n\n    render() {\n\n        return (\n            <input\n                type=\"text\"\n                data-id={this.props.input.data.id}\n                value={this.props.input.localData[this.props.input.data.id] || ''}\n                onChange={this.props.input.handleOnChange} />\n        );\n    }\n}\n\nexport default ExerciseInput;","import React, { Component } from 'react';\nimport ExerciseInput from \"./ExerciseInput\";\n\n\nclass ExerciseItem extends Component {\n    \n    render() {\n\n        let visit = this.props.localData[`answer${this.props.data.id}`] ? 'visited' : '';\n\n        return (\n            <li>\n                {this.props.data.bg}\n                <ExerciseInput input={this.props} />\n                <details>\n                    <summary data-id={this.props.data.id} className={visit} onClick={this.props.handleClickAnswer}>Answer</summary>\n                    <p>{this.props.data.en}</p>\n                </details>\n            </li>\n        );\n    }\n}\n\nexport default ExerciseItem;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { url } from '../../helpers';\nimport './Exercise.css';\nimport ExerciseResetButton from \"./ExerciseResetButton\";\nimport ExerciseItem from \"./ExerciseItem\";\n\nclass Exercise extends Component {\n    constructor(props) {\n        super(props);\n\n        this.module = 'exercises';\n        this.state = {\n            data: [],\n            localData: {},\n        };\n    }\n    \n    getData = (lessonId = 1) => {\n        const uri = url(`/exercises/${lessonId}`);\n        const localData = JSON.parse( localStorage.getItem(`${this.module}Data`) );\n        const localKey = `lesson${lessonId}`;\n        \n        if ( localData && localData[localKey] ) {\n            this.setState({\n                    data: localData[localKey]\n            });\n        } else {\n            axios.get(uri)\n                .then(result => {\n                    this.setLocalData(result.data, localKey, localData);\n                    \n                    this.setState({\n                        data: result.data\n                    });\n                });\n        }\n    };\n    \n    setLocalData = (apiData, localKey, localData) => {\n        if (localData) {\n            localData[localKey] = apiData;\n        } else {\n            localData = {[localKey]: apiData};\n        }\n        \n        localStorage.setItem( `${this.module}Data`, JSON.stringify(localData) );\n    };\n\n    setLocalStorage = () => {\n        const lesson = 'lesson' + parseInt(this.props.match.params.id, 10);\n        const {localData} = this.state;\n\n        localStorage.setItem(lesson, JSON.stringify(localData));\n    };\n\n    getLocalStorage = lessonId => {\n        const lesson = 'lesson' + lessonId;\n\n        if (localStorage.getItem(lesson)) {\n            let localExercises = JSON.parse(localStorage.getItem(lesson));\n\n            this.setState({\n                localData: localExercises\n            });\n        }\n    };\n\n    handleClick = () => {\n        this.setState({\n            localData: {}\n        });\n    };\n    \n    handleClickAnswer = (event) => {\n        let {localData} = this.state;\n\n        localData[`answer${event.target.dataset.id}`] = 1;\n        \n        this.setState({     \n            localData: localData\n        });\n    };\n\n    handleOnChange = event => {\n        let {localData} = this.state;\n\n        localData[event.target.dataset.id] = event.target.value;\n\n        this.setState({\n            localData: localData\n        });\n    };\n\n    render() {\n\n        const {data, localData} = this.state;\n        const resetButton = Object.keys(localData).length ? <ExerciseResetButton handler={this.handleClick} /> : null;\n        const result = data.map(entry => (\n            <ExerciseItem\n                key={entry.id}\n                handleOnChange={this.handleOnChange}\n                handleClickAnswer={this.handleClickAnswer}\n                data={entry}\n                localData={localData}\n            />)\n        );\n\n        return (\n            <div className=\"main\">\n                {resetButton}\n                <ol>{result}</ol>\n            </div>\n        )\n    }\n\n    componentDidMount() {\n        this.getData(parseInt(this.props.match.params.id, 10));\n        this.getLocalStorage(parseInt(this.props.match.params.id, 10));\n    }\n    \n    componentDidUpdate() {\n        this.setLocalStorage();\n    }\n}\n\nexport default Exercise;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nclass WordsNavItem extends Component {\n\n    render() {\n        let {url, content, id} = this.props;\n        let answer = this.props.answer || []; \n        let info = this.props.quantity ? <span className=\"score\">{answer.length}/{this.props.quantity}</span> : null;\n        let className = this.props.className || '';\n\n        return (\n            <li className={className}>\n                <Link\n                    to={url}\n                    data-id={id}>\n                    {content}\n                </Link>\n                {info}\n            </li>\n        );\n    }\n}\n\nexport default WordsNavItem;","import React, { Component } from 'react';\nimport WordsNavItem from './words/WordsNavItem';\n\nclass AppNav extends Component {\n\n    render() {\n        \n        const items = [\n            <WordsNavItem key={1} url='/lessons' content='Lessons' />,\n            <WordsNavItem key={2} url='/words' content='Words' />,\n            <WordsNavItem key={3} url='/phrases' content='Phrases' />,\n            //~ <WordsNavItem key={4} url='/competition' content='Competition' />\n        ];\n\n        return (\n            <div className=\"container\">\n                <div className=\"main\">\n                    <ol id=\"wordsNavList\">{items}</ol>\n                </div>\n            </div>\n        )\n    }\n}\nexport default AppNav;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { url, getModuleVersion } from '../../helpers';\nimport WordsNavItem from '../words/WordsNavItem';\nimport ExerciseResetButton from \"./ExerciseResetButton\";\nimport '../words/WordsNav.css';\n\nclass ExerciseNav extends Component {\n    \n    constructor(props) {\n        super(props);\n\n        this.module = 'exercises';\n        this.state = {\n            data: [],\n            visited: []\n        };\n    }\n    \n    getData = () => {\n        \n        const uri = url('/lessons');\n        const storageVersion = parseFloat( localStorage.getItem(`${this.module}Version`) );\n        const appVersion = getModuleVersion(this.module);\n        const exercisesNav = JSON.parse( localStorage.getItem(`${this.module}Nav`) );\n        \n        if ( storageVersion && storageVersion === appVersion && exercisesNav ) {\n            \n            this.setState({\n                data: exercisesNav\n            });\n        } else {\n            axios.get(uri)\n                .then(result => {\n                    this.setExercisesNav(appVersion, result.data);\n                \n                    this.setState({\n                        data: result.data\n                    });\n                });\n        }\n        \n    };\n    \n    setExercisesNav = (appVersion, exercisesNav) => {\n        localStorage.setItem(`${this.module}Version`, appVersion);\n        localStorage.setItem( `${this.module}Nav`, JSON.stringify(exercisesNav) );\n    };\n    \n    setVisited = () => {\n        let local = Object.keys(localStorage);\n        let lessons = local.filter(function(key) {\n            return key.includes('lesson');\n        });\n        \n        this.setState({\n            visited: lessons\n        });\n    };\n    \n    handleClick = () => {\n        let {visited} = this.state;\n        \n        visited.forEach(function(key) {\n            localStorage.removeItem(key)\n        });\n        \n        this.setState({ visited: [] });\n    };\n    \n    addClassVisited = (id) => localStorage.getItem(`lesson${id}`) ? 'visited' : '';\n    \n    handleAnswer = (id) => {\n        let answer = [];\n        let item = localStorage.getItem(`lesson${id}`);\n        \n        if (item) {\n            let data = JSON.parse(item);\n            \n            answer = Object.keys(data).filter(function(key){\n                return key.indexOf('answer') > -1;\n            });\n        }\n        \n        return answer;\n    };\n\n    render() {\n        \n        const {data, visited} = this.state;\n        const resetButton = visited.length ? <ExerciseResetButton handler={this.handleClick} /> : null;\n        const result = data.map(entry => (\n            <WordsNavItem\n                key={entry.id}\n                id={entry.id}\n                className={this.addClassVisited(entry.id)}\n                url={`/lessons/${entry.id}`}\n                content={entry.title}\n                quantity={entry.quantity}\n                answer={this.handleAnswer(entry.id)}\n            />)\n        );\n\n        return (\n            <div className=\"container\">\n                <div className=\"main\">\n                    {resetButton}\n                    <ol id=\"wordsNavList\">{result}</ol>\n                </div>\n            </div>\n        )\n    }\n\n    componentDidMount() {\n        this.setVisited();\n        this.getData();\n    }\n}\n\nexport default ExerciseNav;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { url, getModuleVersion } from '../../helpers';\nimport WordsNavItem from './WordsNavItem';\nimport ExerciseResetButton from \"../lessons/ExerciseResetButton\";\nimport './WordsNav.css';\n\nclass WordsNav extends Component {\n    \n    constructor(props) {\n        super(props);\n\n        this.module = 'words';\n        this.moduleUrl = '/words/';\n        this.dataUrl = '/words/1/1';\n        this.state = {\n            rowsCount: [],\n            visited: []\n        };\n        \n        this.getData = this.getData.bind(this);\n    }\n\n    getData = () => {\n        const uri = url(this.dataUrl);\n        const storageVersion = parseFloat( localStorage.getItem(`${this.module}Version`) );\n        const appVersion = getModuleVersion(this.module);\n        const rowsCount = localStorage.getItem(`${this.module}Nav`);\n        \n        if ( storageVersion && storageVersion === appVersion && rowsCount ) {\n            \n            this.setState({\n                rowsCount: rowsCount\n            });\n        } else {\n            axios.get(uri)\n                .then(result => {\n                    this.setWordsNav(appVersion, result.data.rows.rowsCount);\n                \n                    this.setState({\n                        rowsCount: result.data.rows.rowsCount\n                    });\n                });\n        }\n    };\n    \n    handleClick = () => {\n        localStorage.removeItem(this.module);\n        \n        this.setState({ visited: [] });\n    };\n    \n    setVisited = () => {\n        const local = localStorage.getItem(this.module);\n        const visited = local ? JSON.parse(local) : [];\n        \n        this.setState({\n            visited: visited\n        });\n    };\n    \n    setWordsNav = (appVersion, rowsCount) => {\n        localStorage.setItem(`${this.module}Version`, appVersion);\n        localStorage.setItem(`${this.module}Nav`, rowsCount);\n        \n    };\n    \n    addClassVisited = id => this.state.visited.indexOf(id) > -1 ? 'visited' : '';\n\n    render() {\n        const {rowsCount, visited} = this.state;\n        const elements = [];\n        const items = Math.ceil(rowsCount / 20);\n        const resetButton = visited.length ? <ExerciseResetButton handler={this.handleClick} /> : null;\n        \n        for (let i = 1; i <= items; i++) {\n            elements.push(<WordsNavItem \n                            key={i}\n                            className={this.addClassVisited(i)} \n                            url={`${this.moduleUrl}${i}`} \n                            content={`Lesson ${i}`} />\n            );\n        }\n\n        return (\n            <div className=\"container\">\n                <div className=\"main\">\n                    {resetButton}\n                    <ol id=\"wordsNavList\">{elements}</ol>\n                </div>\n            </div>\n        )\n    }\n\n    componentDidMount() {\n        this.getData();\n        this.setVisited();\n        \n    }\n}\n\nexport default WordsNav;","import React, { Component } from 'react';\n\nclass WordsItem extends Component {\n\n    render() {\n\n        let trans = this.props.data.transcription ? `[${this.props.data.transcription}]` : '';\n\n        return (\n            <li>\n                {this.props.data.bg}\n                <details>\n                    <summary>Answer</summary>\n                    <p>{this.props.data.en} {trans}</p>\n                </details>\n            </li>\n        );\n    }\n}\n\nexport default WordsItem;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { url } from '../../helpers';\nimport WordsItem from \"./WordsItem\";\n\nclass Words extends Component {\n    \n    constructor(props) {\n        super(props);\n\n        this.module = 'words';\n        this.moduleUrl = '/words/';\n        this.itemsCount = 20;\n        this.state = {\n            data: [],\n        };\n    }\n\n    getData = (lesson = 1) => {\n        const uri  = url(`${this.moduleUrl}${lesson}/${this.itemsCount}`);\n        const localData = JSON.parse( localStorage.getItem(`${this.module}Data`) );\n        const localKey = `lesson${lesson}`;\n        \n        if ( localData && localData[localKey] ) {\n            this.setState({\n                    data: localData[localKey]\n            });\n        } else {\n            axios.get(uri)\n                .then(result => {\n                    this.setLocalData(result.data.data, localKey, localData);\n                    \n                    this.setState({\n                        data: result.data.data\n                    });\n                });\n        }\n    };\n    \n    setVisited = (id) => {\n        let visited = localStorage.getItem(this.module);\n        let local = [];\n        if (visited) {\n            \n            local = JSON.parse(visited);\n            if ( local.indexOf(id) > -1 ) {\n                return;\n            } else {\n                local.push(id);\n                localStorage.setItem(this.module, JSON.stringify(local));\n            }\n            \n        } else {\n            localStorage.setItem(this.module, JSON.stringify([id]));\n        }\n    };\n    \n    setLocalData = (apiData, localKey, localData) => {\n        if (localData) {\n            localData[localKey] = apiData;\n        } else {\n            localData = {[localKey]: apiData};\n        }\n        \n        localStorage.setItem( `${this.module}Data`, JSON.stringify(localData) );\n    };\n\n    render() {\n        const {data} = this.state;\n        \n        const result = data.map(entry => (\n            <WordsItem\n                key={entry.id}\n                data={entry}\n            />)\n        );\n\n        return (\n            <div className=\"container\">\n                <div className=\"main\">\n                    <ol>{result}</ol>\n                </div>\n            </div>\n        )\n    }\n\n    componentDidMount() {\n        const param = parseInt(this.props.match.params.id, 10);\n        this.getData(param);\n        this.setVisited(param)\n    }\n}\n\nexport default Words;","import Words from '../words/Words';\n\nclass Phrases extends Words {\n    constructor(props) {\n        super(props);\n\n        this.module = 'phrases';\n        this.moduleUrl = '/phrases/';\n        this.itemsCount = 20;\n    }\n}\n\nexport default Phrases;","import WordsNav from '../words/WordsNav';\n\nclass PhrasesNav extends WordsNav {\n    \n    constructor(props) {\n        super(props);\n\n        this.module = 'phrases';\n        this.moduleUrl = '/phrases/';\n        this.dataUrl = '/phrases/1/1'\n    }\n}\n\nexport default PhrasesNav;","import React from  'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Exercise from \"./lessons/Exercise\";\nimport AppNav from \"./AppNav\";\nimport ExerciseNav from \"./lessons/ExerciseNav\";\nimport WordsNav from \"./words/WordsNav\";\nimport Words from \"./words/Words\";\nimport Phrases from \"./phrases/Phrases\";\nimport PhrasesNav from \"./phrases/PhrasesNav\";\n//~ import CompetitionNav from \"./competitions/CompetitionNav\";\n//~ import WordsCompetitionNav from \"./competitions/WordsCompetitionNav\";\n//~ import WordsCompetition from \"./competitions/WordsCompetition\";\n\n//~ <Route path=\"/competition/:id\" component={WordsCompetitionNav} />\n//~ <Route path=\"/competition\" component={CompetitionNav} />\n//~ <Route path=\"/words-competition/:id\" component={WordsCompetition} />\n\nconst Routes = () => (\n    <Switch>\n        <Route exact path=\"/\" component={AppNav} />\n        <Route path=\"/lessons/:id\" component={Exercise} />\n        <Route path=\"/lessons\" component={ExerciseNav} />\n        <Route path=\"/words/:id\" component={Words} />\n        <Route path=\"/words\" component={WordsNav} />\n        <Route path=\"/phrases/:id\" component={Phrases} />\n        <Route path=\"/phrases\" component={PhrasesNav} />\n    </Switch>\n);\n\nexport default Routes;","import React, { Component } from 'react';\nimport './App.css';\nimport Navigation from \"./Navigation\";\nimport Routes from \"./Routes\";\n\n\nclass App extends Component {\n\n    render() {\n\n        return (\n            <div>\n                <Navigation />\n                <Routes />\n            </div>\n        );\n    }\n}\n\nexport default App;","import React from 'react';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './index.css';\n\n\nReactDOM.render(\n    (\n        <Router basename={process.env.PUBLIC_URL}>\n            <App />\n        </Router>\n    ),\n    document.getElementById('root')\n);"],"sourceRoot":""}